<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="form" uri="http://www.springframework.org/tags/form"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<c:set var="path" value="${pageContext.request.contextPath}" />
<!DOCTYPE html>
<html>
<head>
<!-- jquery -->
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
﻿
<!-- jquery -->
﻿
<script type="text/javascript" src="jquery-3.4.1.min.js"></script>
<!-- ckeditor 4 -->
<link rel="stylesheet" href="${path}/resources/ckeditor/contents.css">
<!-- <script src="https://cdn.ckeditor.com/4.12.1/standard-all/ckeditor.js"></script> -->
<script type="text/javascript"
	src="${path}/resources/ckeditor/ckeditor.js"></script>
﻿ ﻿
<script type="text/javascript"
	src="//dapi.kakao.com/v2/maps/sdk.js?appkey=f850654c021fcb52efb271b62ce441eb&libraries=services"></script>
<script type="text/javascript"
	src="//dapi.kakao.com/v2/maps/sdk.js?appkey=APIKEY&libraries=LIBRARY"></script>
<script type="text/javascript"
	src="//dapi.kakao.com/v2/maps/sdk.js?appkey=APIKEY&libraries=services"></script>
<script type="text/javascript"
	src="//dapi.kakao.com/v2/maps/sdk.js?appkey=APIKEY&libraries=services,clusterer,drawing"></script>
<meta charset="UTF-8">
<style>
.map_wrap, .map_wrap * {
	margin: 0;
	padding: 0;
	font-family: 'Malgun Gothic', dotum, '돋움', sans-serif;
	font-size: 12px;
}

.map_wrap a, .map_wrap a:hover, .map_wrap a:active {
	color: #000;
	text-decoration: none;
}

.map_wrap {
	position: relative;
	width: 100%;
	height: 500px;
}

#menu_wrap {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	width: 250px;
	margin: 10px 0 30px 10px;
	padding: 5px;
	overflow-y: auto;
	background: rgba(255, 255, 255, 0.7);
	z-index: 1;
	font-size: 12px;
	border-radius: 10px;
}

.bg_white {
	background: #fff;
}

#menu_wrap hr {
	display: block;
	height: 1px;
	border: 0;
	border-top: 2px solid #5F5F5F;
	margin: 3px 0;
}

#menu_wrap .option {
	text-align: center;
}

#menu_wrap .option p {
	margin: 10px 0;
}

#menu_wrap .option button {
	margin-left: 5px;
}

#placesList li {
	list-style: none;
}

#placesList .item {
	position: relative;
	border-bottom: 1px solid #888;
	overflow: hidden;
	cursor: pointer;
	min-height: 65px;
}

#placesList .item span {
	display: block;
	margin-top: 4px;
}

#placesList .item h5, #placesList .item .info {
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}

#placesList .item .info {
	padding: 10px 0 10px 55px;
}

#placesList .info .gray {
	color: #8a8a8a;
}

#placesList .info .jibun {
	padding-left: 26px;
	background:
		url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png)
		no-repeat;
}

#placesList .info .tel {
	color: #009900;
}

#placesList .item .markerbg {
	float: left;
	position: absolute;
	width: 36px;
	height: 37px;
	margin: 10px 0 0 10px;
	background:
		url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png)
		no-repeat;
}

#placesList .item .marker_1 {
	background-position: 0 -10px;
}

#placesList .item .marker_2 {
	background-position: 0 -56px;
}

#placesList .item .marker_3 {
	background-position: 0 -102px
}

#placesList .item .marker_4 {
	background-position: 0 -148px;
}

#placesList .item .marker_5 {
	background-position: 0 -194px;
}

#placesList .item .marker_6 {
	background-position: 0 -240px;
}

#placesList .item .marker_7 {
	background-position: 0 -286px;
}

#placesList .item .marker_8 {
	background-position: 0 -332px;
}

#placesList .item .marker_9 {
	background-position: 0 -378px;
}

#placesList .item .marker_10 {
	background-position: 0 -423px;
}

#placesList .item .marker_11 {
	background-position: 0 -470px;
}

#placesList .item .marker_12 {
	background-position: 0 -516px;
}

#placesList .item .marker_13 {
	background-position: 0 -562px;
}

#placesList .item .marker_14 {
	background-position: 0 -608px;
}

#placesList .item .marker_15 {
	background-position: 0 -654px;
}

#pagination {
	margin: 10px auto;
	text-align: center;
}

#pagination a {
	display: inline-block;
	margin-right: 10px;
}

#pagination .on {
	font-weight: bold;
	cursor: default;
	color: #777;
}
</style>
<title>사랑하냥? 사랑하개!</title>
</head>
<body>
	<!-- header -->
	<jsp:include page="/WEB-INF/view/include/header.jsp" />
	<!-- //header -->

	<!-- container -->
	<form method="post" name="writeForm" action="petchatInsert"
		enctype="multipart/form-data">
		<center>
			<table>
				<c:if test="${boardVo.boardNumber == null}">
					<tr>
						<td>글쓴이&nbsp;</td>
						<td><input class="form-control mr-sm-2" type="text"
							name="nickName" value="${nickName}" style="width: 1000px;" readonly/></td>
					</tr>
					<tr>
						<td>제목&nbsp;</td>
						<td><input class="form-control mr-sm-2" type="text"
							name="title" style="width: 800px;" /> 
							<c:if test="${memberLevel==0}">
								<label> <input type="checkbox" id="notice" name="notice"
									value='y' onClick="checkbox_Check()" /> 공지글
								</label>
							</c:if> 
						</td>
					</tr>
					<script>
						function checkbox_Check() {
							if ($("input:checkbox[name=notice]").is(":checked") == true) {
								document.writeForm.notice.value = 'y';
								console.log("체크됨"
										+ document.writeForm.notice.value);
								//체크가 되어있을때.    
							} else {
								document.writeForm.notice.value = 'n';
								console.log("체크 해제"
										+ document.writeForm.notice.value);
								//체크가 안되어있을때.
							}
						}
					</script>
					<tr>
						<td name="type">집사들의 수다</td>
						<td><select class="custom-select" id="board_type" name="type"
							style="width: 150px;" onchange="javascript:change();">
								<option value="item">멍냥잡화점</option>
								<option value="lostpet">구해줘 팻즈</option>
								<option value="petplace">멍냥 여행사</option>
								<option value="hospital">동물병원</option>
								<option value="petchat">집사들의 수다</option>
						</select> <select class="custom-select" id="board_petchat" name="subtitle"
							style="display:; width: 150px;">
								<option value="일상">일상</option>
								<option value="여행">여행</option>
								<option value="질문">질문</option>
						</select></td>
					</tr>

					<!-- 말머리 관리 스크립트 -->
					<script>
						function change() {
							if ($("#board_type").val() == "item") {
								document.getElementById("board_item").style.display = "";

							} else {
								document.getElementById("board_item").style.display = "none";
							}

							if ($("#board_type").val() == "lostpet") {
								document.getElementById("board_lostpet").style.display = "";
								document.getElementById("board_lostpet1").style.display = "";
							} else {
								document.getElementById("board_lostpet").style.display = "none";
								document.getElementById("board_lostpet1").style.display = "none";
							}

							if ($("#board_type").val() == "petplace") {
								document.getElementById("board_petplace").style.display = "";
								document.getElementById("board_petplace1").style.display = "";
							} else {
								document.getElementById("board_petplace").style.display = "none";
								document.getElementById("board_petplace1").style.display = "none";
							}

							if ($("#board_type").val() == "hospital") {
								document.getElementById("board_hospital").style.display = "";
							} else {
								document.getElementById("board_hospital").style.display = "none";
							}

							if ($("#board_type").val() == "petchat") {
								document.getElementById("board_petchat").style.display = "";
							} else {
								document.getElementById("board_petchat").style.display = "none";
							}
						}
					</script>

					<tr>
						<td>내용</td>
						<td>
							<div class="form-group">
								<label for="exampleTextarea"></label>
								<textarea class="form-control" id="content" rows=10
									name="content"></textarea>
							</div> <script>
								CKEDITOR.replace('content', {
									filebrowserUploadUrl : "imageUpload.do"
								}); // 에디터로 생성
							</script>
						</td>
					</tr>
					<tr>
						<td>지도</td>
						<td>
							<div class="map_wrap">
								<div id="map"
									style="width: 100%; height: 100%; position: relative; overflow: hidden;"></div>
								<div id="result"></div>
								<div id="menu_wrap" class="bg_white">
									<div class="option">
										<div>
											키워드 : <input type="text" value="이태원 맛집" id="keyword"
												size="15"> <input type="button" value="검색"
												id="searchBtn" onClick="searchPlaces()">
										</div>
									</div>
									<hr>
									<ul id="placesList"></ul>
									<div id="pagination"></div>
									<input type="hidden" id="latitude" name="latitude"> <input
										type="hidden" id="longitude" name="longitude"> <input
										type="hidden" id="mapPlace" name="mapPlace">
								</div>
							</div>
						</td>
					</tr>
					<!-- <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=f850654c021fcb52efb271b62ce441eb"></script> -->
					<tr>
						<td></td>
						<td>
							<div style="float: right;">
								<input type="submit" value="등록하기"
									class="btn btn-secondary my-2 my-sm-0" /> <a href="petchat"><button
										class="btn btn-secondary my-2 my-sm-0">뒤로가기</button></a>
							</div>
						</td>
					</tr>
				</c:if>
			</table>
		</center>
	</form>

	<script>
		// 마커를 담을 배열입니다
		var markers = [];

		var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
		mapOption = {
			center : new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
			level : 3
		// 지도의 확대 레벨
		};

		// 지도를 생성합니다    
		var map = new kakao.maps.Map(mapContainer, mapOption);

		// 장소 검색 객체를 생성합니다
		var ps = new kakao.maps.services.Places();

		// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다
		var infowindow = new kakao.maps.InfoWindow({
			zIndex : 1
		});

		// 키워드로 장소를 검색합니다
		searchPlaces();

		// 키워드 검색을 요청하는 함수입니다
		function searchPlaces() {

			var keyword = document.getElementById('keyword').value;

			if (!keyword.replace(/^\s+|\s+$/g, '')) {
				alert('키워드를 입력해주세요!');
				return false;
			}

			// 장소검색 객체를 통해 키워드로 장소검색을 요청합니다
			ps.keywordSearch(keyword, placesSearchCB);
		}

		// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다
		function placesSearchCB(data, status, pagination) {
			if (status === kakao.maps.services.Status.OK) {

				// 정상적으로 검색이 완료됐으면
				// 검색 목록과 마커를 표출합니다
				displayPlaces(data);

				// 페이지 번호를 표출합니다
				displayPagination(pagination);

			} else if (status === kakao.maps.services.Status.ZERO_RESULT) {

				alert('검색 결과가 존재하지 않습니다.');
				return;

			} else if (status === kakao.maps.services.Status.ERROR) {

				alert('검색 결과 중 오류가 발생했습니다.');
				return;

			}
		}

		// 검색 결과 목록과 마커를 표출하는 함수입니다
		function displayPlaces(places) {

			var listEl = document.getElementById('placesList'), menuEl = document
					.getElementById('menu_wrap'), fragment = document
					.createDocumentFragment(), bounds = new kakao.maps.LatLngBounds(), listStr = '';

			// 검색 결과 목록에 추가된 항목들을 제거합니다
			removeAllChildNods(listEl);

			// 지도에 표시되고 있는 마커를 제거합니다
			removeMarker();

			for (var i = 0; i < places.length; i++) {

				// 마커를 생성하고 지도에 표시합니다
				var placePosition = new kakao.maps.LatLng(places[i].y,
						places[i].x), marker = addMarker(placePosition, i), itemEl = getListItem(
						i, places[i]); // 검색 결과 항목 Element를 생성합니다

				// 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
				// LatLngBounds 객체에 좌표를 추가합니다
				bounds.extend(placePosition);

				// 마커와 검색결과 항목에 mouseover 했을때
				// 해당 장소에 인포윈도우에 장소명을 표시합니다
				// mouseout 했을 때는 인포윈도우를 닫습니다
				(function(marker, title) {
					kakao.maps.event.addListener(marker, 'click',
							(function(placePosition) {
								displayInfowindow(marker, title);

								return function() {
									console.log("placePosition.La:"
											+ placePosition.La);
									console.log("placePosition.Ma:"
											+ placePosition.Ma);
									console.log("placeName:" + title);
									//console.log(); -> 브라우저 콘솔에서 출력해서 값을 볼 수 있음
									//document.getElementById("latitude").value = placePosition.La;
									$("#latitude").val(placePosition.La);
									$("#longitude").val(placePosition.Ma);
									$("#mapPlace").val(title);
									/* $('input[name=latitude]').attr('value', placePosition.La);
									$('input[name=longitude]').attr('value', placePosition.Ma);
									$('input[name=mapPlace]').attr('value', title); */

									//#result 영역에 좌표정보 출력
									var resultDiv = document
											.getElementById('result');

									resultDiv.innerHTML = '선택하신 위치는' + '"'
											+ title + '"' + placePosition
											+ '입니다.';
								}
							})(placePosition));

					kakao.maps.event.addListener(marker, 'mouseout',
							function() {
								infowindow.close();
							});

					itemEl.onmouseover = function() {
						displayInfowindow(marker, title);
					};

					itemEl.onmouseout = function() {
						infowindow.close();
					};
				})(marker, places[i].place_name);

				fragment.appendChild(itemEl);
			}

			// 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다
			listEl.appendChild(fragment);
			menuEl.scrollTop = 0;

			// 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
			map.setBounds(bounds);
		}

		// 검색결과 항목을 Element로 반환하는 함수입니다
		function getListItem(index, places) {

			var el = document.createElement('li'), itemStr = '<span class="markerbg marker_'
					+ (index + 1)
					+ '"></span>'
					+ '<div class="info">'
					+ '   <h5>' + places.place_name + '</h5>';

			if (places.road_address_name) {
				itemStr += '    <span>' + places.road_address_name + '</span>'
						+ '   <span class="jibun gray">' + places.address_name
						+ '</span>';
			} else {
				itemStr += '    <span>' + places.address_name + '</span>';
			}

			itemStr += '  <span class="tel">' + places.phone + '</span>'
					+ '</div>';

			el.innerHTML = itemStr;
			el.className = 'item';

			return el;
		}

		// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다
		function addMarker(position, idx, title) {
			var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다
			imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기
			imgOptions = {
				spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기
				spriteOrigin : new kakao.maps.Point(0, (idx * 46) + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표
				offset : new kakao.maps.Point(13, 37)
			// 마커 좌표에 일치시킬 이미지 내에서의 좌표
			}, markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize,
					imgOptions), marker = new kakao.maps.Marker({
				position : position, // 마커의 위치
				image : markerImage
			});

			marker.setMap(map); // 지도 위에 마커를 표출합니다
			markers.push(marker); // 배열에 생성된 마커를 추가합니다

			return marker;
		}

		// 지도 위에 표시되고 있는 마커를 모두 제거합니다
		function removeMarker() {
			for (var i = 0; i < markers.length; i++) {
				markers[i].setMap(null);
			}
			markers = [];
		}

		// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다
		function displayPagination(pagination) {
			var paginationEl = document.getElementById('pagination'), fragment = document
					.createDocumentFragment(), i;

			// 기존에 추가된 페이지번호를 삭제합니다
			while (paginationEl.hasChildNodes()) {
				paginationEl.removeChild(paginationEl.lastChild);
			}

			for (i = 1; i <= pagination.last; i++) {
				var el = document.createElement('a');
				el.href = "#";
				el.innerHTML = i;

				if (i === pagination.current) {
					el.className = 'on';
				} else {
					el.onclick = (function(i) {
						return function() {
							pagination.gotoPage(i);
						}
					})(i);
				}

				fragment.appendChild(el);
			}
			paginationEl.appendChild(fragment);
		}

		// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다
		// 인포윈도우에 장소명을 표시합니다
		function displayInfowindow(marker, title) {
			var content = '<div style="padding:5px;z-index:1;">' + title
					+ '</div>';

			infowindow.setContent(content);
			infowindow.open(map, marker);
		}

		// 검색결과 목록의 자식 Element를 제거하는 함수입니다
		function removeAllChildNods(el) {
			while (el.hasChildNodes()) {
				el.removeChild(el.lastChild);
			}
		}
	</script>
	<!-- //container -->

	<!-- footer -->
	<jsp:include page="/WEB-INF/view/include/footer.jsp" />
	<!-- //footer -->
</body>
</html>